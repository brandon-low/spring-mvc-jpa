/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.4'
    implementation 'org.springframework.boot:spring-boot-devtools:2.5.4'
    implementation 'org.springframework:spring-core:5.3.9'
    implementation 'org.springframework:spring-webmvc:5.3.9'
    implementation 'org.springframework:spring-aspects:5.3.9'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.4'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.el:javax.el-api:3.0.1-b06'
    implementation 'org.glassfish.web:javax.el:2.2.6'
    implementation 'org.hibernate.validator:hibernate-validator:6.0.22.Final'
    implementation 'org.hibernate.validator:hibernate-validator-annotation-processor:6.0.22.Final'
    implementation 'org.webjars:bootstrap:3.3.7'
    implementation 'org.webjars:jquery:3.2.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.postgresql:postgresql:42.2.5'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testImplementation 'org.testcontainers:testcontainers:1.16.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.16.0'
    testImplementation 'org.testcontainers:postgresql:1.10.6'
    testImplementation 'org.assertj:assertj-core:3.19.0'
    providedCompile 'org.projectlombok:lombok:1.18.20'
}

group = 'springmvc'
version = '0.0.1-SNAPSHOT'
description = 'springmvc'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


def getDate() {
    new Date().format('yyyy-MM-dd_HH_mm')
}

tasks.register("zip") {

	println "${getDate()}"

	doLast {
       ant.zip(destfile: "SpringMvc-${getDate()}.zip") {
       	   	zipfileset(dir: 'src', prefix: 'src') {
            	include(name: "**/*.java")
            	include(name: "**/*.xml")
            	include(name: "**/*.properties")
            	include(name: "**/*.css")
            	include(name: "**/*.html")
            	include(name: "**/*.hml")
        	}
        	fileset (dir : "." , includes: "*.xml,*.gradle,*.txt,*.gradle")
    	}
	}
}
